<?php


/**
 *Implements hook_menu().
 */
function my_database_menu() {
  $items = array();
  $items['my-database'] = array(
    'title'            => t('Database'),
    'page callback'    => 'database_page',
    'access callback'  => TRUE,
  );
  $items['my-database/insert'] = array(
    'title' => t('Page for insert data'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_insert_form'),
    'access arguments' => TRUE,
    'access callback'  => TRUE,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['my-database/list'] = array(
   'title' => t('Page for list data'),
   'page callback' => 'my_database_list_data',
   'access arguments' => TRUE,
   'access callback'  => TRUE,
   'type' => MENU_LOCAL_TASK,
  );
  $items['my-database/%/delete'] = array(
   'title callback' => 'my_database_delete_page_title',
   'title arguments' => array(1),
   'page callback' => 'drupal_get_form',
   'page arguments' => array('my_database_delete_form', 1),
   'access arguments' => TRUE,
   'access callback' => TRUE,
  );
  $items['my-database/%/update'] = array(
   'title callback' => 'my_database_update_page_title',
   'title arguments' => array(1),
   'page callback' => 'drupal_get_form',
   'page arguments' => array('my_database_update_form', 1),
   'access arguments' => TRUE,
   'access callback' => TRUE,
  );


  return $items;
}


/**
 *Implements function database_page.
 */
function database_page() {
  return t('Test database');
}


/**
 * Build form my_database_insert.
 */
function my_database_insert_form($form, $form_state) {
  $form = array();
  $form['number'] = array(
    '#title' => t('Number'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
  $form['teaser'] = array(
    '#title' => t('Teaser'),
    '#type' => 'textfield',
    '#required' => TRUE,
    '#maxlength' => 150,
  );
  $form['text'] = array(
    '#title' => t('Text'),
    '#type' => 'textarea',
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('submit'),
  );
  $form['#validate'][] = 'my_database_insert_form_validate';

  return $form;
}


/**
 * Validate function for my_database_insert_form.
 */
function my_database_insert_form_validate($form, &$form_state) {
  if (!is_numeric($form_state['values']['number'])) {
    form_set_error($form_state['values']['number'], 'Number must be integer');
  }
}


/**
 * Submit for my_database_insert_form/
 */
function my_database_insert_form_submit($form, &$form_state) {
  $query = db_insert('custom_table')
    ->fields(array(
      'number' => $form_state['values']['number'],
      'teaser' => $form_state['values']['teaser'],
      'text'   => $form_state['values']['text'],
    ))
    ->execute();
  if ($query > 0) {
    drupal_set_message(t('Data has been successfully sent.'));
  }
  else {
    drupal_set_message(t("Data hasn't been sent."), 'error');
  }
}


/**
 * Build form my_database_list_data.
 */
function my_database_list_data() {
 $header = array(
   t('ID'), t('Number'), t('Teaser'), t('Text'), t('Action'),
 );
 $rows = array();
 $query = db_select('custom_table', 't')
   ->fields('t')
   ->orderBy('id', 'DESC')
   ->execute();
 while ($value = $query->fetchAssoc()) {
   $rows[] = array(
     $value['id'],
     $value['number'],
     $value['teaser'],
     $value['text'],
     l(t('delete'), 'my-database/' . $value['id'] . '/delete') . ' / ' . l(t('edit'), 'my-database/' . $value['id'] . '/update')
   );
 }

 return theme('table', array('header' => $header, 'rows' => $rows));
}


 /**
  * Title callback for my_database_delete_page.
  */
function my_database_delete_page_title($id) {
 $result = db_query("SELECT id FROM {custom_table} WHERE id = :id", array(':id' => $id))
   ->fetchField();

 return t('Are your sure want delete item with id "@num"?', array('@num' => $result));
}


/**
 * Build form for my_database_delete_form().
 */
function my_database_delete_form() {
  $form = array();
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('submit'),
  );
  $form['cancel'] = array(
    '#markup' => l(t('Cancel'), 'my-database'),
  );

  return $form;
}


/**
 * Submit function for my_database_delete_form().
 */
function my_database_delete_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $result = db_delete('custom_table')
    ->condition('id', $id)
    ->execute();
  $placeholders = array('@id' => $id);
  if ($result) {
    drupal_set_message(t('Record @id successfully removed.', $placeholders));
  }
  else {
    drupal_set_message(t('Record @id is undefined.', $placeholders), 'warning');
  }
  $form_state['redirect'] = 'my-database';
}


/**
 * Title callback for my_database_update.
 */
function my_database_update_page_title($id) {
  $placeholders = array(':id' => $id);
  $number = db_query("SELECT `id` FROM {custom_table} WHERE `id` = :id", $placeholders)->fetchField();
  if ($number) {
    return t('Edit item whith id "@num"', array('@num' => $id));
  }
  else {
    return t('Id not found.');
  }
}


/**
 * Build form for my_database_update_form().
 */
function my_database_update_form($form, $form_state) {
  $form = array();
  $id = $form_state['build_info']['args'][0];

  $data = db_select('custom_table', 'u')
    ->condition('u.id', $id)
    ->fields('u')
    ->execute()
    ->fetchAssoc();

  if (empty($data) || empty($data['id'])) {
    $placeholders = array(
      '@id' => $id,
      '!back' => l(t('Go back'), 'my-database'),
    );
    $form['text'] = array(
      '#markup' => t('Undefined "@id" id. !back.', $placeholders),
    );

    return $form;
  }

  $form['number'] = array(
    '#title' => t('Number'),
    '#type' => 'textfield',
    '#maxlength' => 10,
    '#required' => TRUE,
    '#default_value' => $data['number'],
  );
  $form['teaser'] = array(
    '#title' => t('Teaser'),
    '#type' => 'textfield',
    '#maxlength' => 150,
    '#required' => TRUE,
    '#default_value' => $data['teaser'],
  );
  $form['text'] = array(
    '#title' => t('Text'),
    '#type' => 'textarea',
    '#required' => TRUE,
    '#default_value' => $data['text'],
  );
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Edit'),
  );
  $form['actions']['cancel'] = array(
    '#markup' => l(t('Cancel'), 'my-database'),
  );
  $form['#validate'][] = 'my_database_update_form_validate';

  return $form;
}


/**
 * validate function for my_database_update_form().
 */
function my_database_update_form_validate($form, &$form_state) {
  if (!is_numeric($form_state['values']['number'])) {
    form_set_error($form_state['values']['number'], 'Number must be integer');
  }
}

/**
 * Submit function for my_database_update_form().
 */
function my_database_update_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $values = $form_state['values'];

  $query = db_update('custom_table')
    ->fields(array(
      'number' => $values['number'],
      'teaser' => $values['teaser'],
      'text'   => $values['text'],
    ))
    ->condition('id', $id)
    ->execute();
    if ($query) {
      drupal_set_message(t('Update successfull'));
    }
    else {
      drupal_set_message(t('Data is not updated'), 'warning');
    }

    $form_state['redirect'] = 'my-database';
}